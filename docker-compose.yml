version: "3.8"

services:
  postgres:
    image: postgres:latest
    container_name: costumer-api-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - costumer-api-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: costumer-api
    environment:
      DB_HOST: ${DB_HOST}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_TIME: ${JWT_EXPIRATION_TIME}
    ports:
      - 3333:3333
    depends_on:
      - postgres
    networks:
      - costumer-api-network
    restart: always

  frontend:
    image: front-teddy
    container_name: front-teddy-app
    ports:
      - 3000:3000
    networks:
      - costumer-api-network
    restart: always

volumes:
  pgdata:

networks:
  costumer-api-network:
    driver: bridge
